{
  "createdAt": "2025-07-17T16:20:55.205Z",
  "updatedAt": "2025-08-05T16:30:23.000Z",
  "id": "uNIcFm36mkqWoZiU",
  "name": "practice-plan-v1",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        2920,
        1460
      ],
      "id": "6ea313e5-e547-4130-bdc3-7035a1c59ab4",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2720,
        1260
      ],
      "id": "81ee65ca-65eb-42cd-9312-3f0ea0659173",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "I8AkDrdcTfhJdWQC",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Returns athlete's name and other personal details.",
        "operation": "executeQuery",
        "query": "SELECT\n      [FirstName]\n      ,[LastName]\n      ,[Gender]\n      ,[DateOfBirth]\n      ,[Height]\n      ,[Weight]\n      ,[userId]\n      ,[GolferType]\n      ,[College]\n  FROM [dbo].[AthleteProfile]\nWHERE [dbo].[AthleteProfile].[id] = {{ $('Edit Fields4').item.json.ap_id }}"
      },
      "type": "n8n-nodes-base.microsoftSqlTool",
      "typeVersion": 1.1,
      "position": [
        3060,
        1460
      ],
      "id": "d6fe9525-0966-4a31-86ac-453352fdde34",
      "name": "Athlete Details2",
      "credentials": {
        "microsoftSql": {
          "id": "QWx5JdDwbJpAMzMS",
          "name": "Microsoft SQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select top 1 [createdAt],\n  [modifiedAt],\n  [PdiWithScoringAvg],\n  [Putt3ft],\n  [Putt10ft],\n  [Putt30ft],\n  [Chip3yd],\n  [Chip10yd],\n  [Chip20yd],\n  [Driver],\n  [SixIronBFC],\n  [BroadJump],\n  [ASLRLeft],\n  [ASLRRight],\n  [DeepSquat],\n  [SupineBridgeLeft],\n  [SupineBridgeRight],\n  [ScoringAverage]\nfrom assessmentSummary\nwhere athleteprofileId =  {{ $json.body.attributes.athleteProfileId }}\nORDER by id desc"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        1600,
        1620
      ],
      "id": "01b07dd6-1b83-4c78-8ce6-9efac1ad51b8",
      "name": "Microsoft SQL2",
      "alwaysOutputData": true,
      "credentials": {
        "microsoftSql": {
          "id": "QWx5JdDwbJpAMzMS",
          "name": "Microsoft SQL account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "\nreturn {\"mostRecentAssessment\": $input.first()};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2300,
        980
      ],
      "id": "735bed2d-0b5b-408b-a077-42edd31bad15",
      "name": "Code2"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "wtIRa9GuyX1CFh4k",
          "mode": "list",
          "cachedResultName": "AssessmentData"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "apId": "={{ JSON.stringify($('Webhook').item.json.body.attributes.athleteProfileId) }}"
          },
          "matchingColumns": [
            "apId"
          ],
          "schema": [
            {
              "id": "apId",
              "displayName": "apId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        2480,
        980
      ],
      "id": "b8096074-74b5-4014-8377-11c01c4ef1cb",
      "name": "Execute Workflow2",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6d982a37-5d6e-4635-8f53-3b8a1997ca17",
              "name": "ap_id",
              "value": "={{ $('Webhook').item.json.body.attributes.athleteProfileId }}",
              "type": "number"
            },
            {
              "id": "21f7860b-e755-4319-8085-9f7593e857fa",
              "name": "chatInput",
              "value": "={{ $('Webhook').item.json.body.attributes.message }}",
              "type": "string"
            },
            {
              "id": "55e638f6-98a9-4489-a3b4-469449f7b0e0",
              "name": "averageScores",
              "value": "={{ $('Execute Workflow2').item.json.averageScores }}",
              "type": "object"
            },
            {
              "id": "21680b6d-6790-4c1c-8f49-cc4a633f7962",
              "name": "mostRecentAssessment",
              "value": "={{ $('Code2').item.json.mostRecentAssessment.json }}",
              "type": "object"
            },
            {
              "id": "79d3dcc5-40eb-407c-b2a0-a0d97ee341be",
              "name": "sessionId",
              "value": "999999999999",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2660,
        980
      ],
      "id": "084e75d0-803d-42b6-a36b-6c6e1eb7ac3f",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Athlete's Question: {{ $json.chatInput }}\n\n---\n\n**Most Recent Assessment:**\n{{ JSON.stringify($json.mostRecentAssessment) }}\n\n**Overall Average Scores:**\n{{ JSON.stringify($json.averageScores) }}\n\n---\n\nPlease analyze the data above. Then:\n- Review how they performed in the most recent assessment.\n- Compare to all-time average.\n- Highlight:\n  - Key declines\n  - Areas that need more work\n- Create a practice plan based on the users input\n- Recommend drills based on the Drills node.\n- Recommend challenges based on the Challenges node.\n- Display the drill and challenge id's next to each drill and challenge in your response",
        "options": {
          "systemMessage": "=You are Coach Petey PDI, a seasoned and encouraging AI golf coach for PDI. PDI is a golf training and improvement tool designed to help athletes assess and improve their Physical, Golf, and Mental abilities through structured assessments and targeted drills. Users take comprehensive assessments and receive scores across various skill domains. Based on these scores, your role is to create clear, personalized, and actionable practice plans to athletes.\n\n**Two Week Practice Plan Guidlines**\n- Practice plan consists of one key focus area (This focus should always be a golf skill). This area should be the users weakest golf skill. You need to assign two drills for this focus area (i.e. if their weakest skill is chipping assign 2 chipping drills, if it is putting assign 2 putting drills...),\n- Practice plan consists of one golf sub-focus area. This area should be the users next weakest golf skill. You need to assign 1 drill for this sub-focus area.\n-Practice plan consists of one physical focus area. This area should be the users weakest physical skill. You need to assign 1 drill for this physical focis area.\n- Practice plan must consist of two challenges that focus on the users key focus area (i.e. if the key focus area is chipping assign 2 chipping challenges).\n- The practice plan should be structured like so:\n  - week 1: key focus drill 1, golf sub-focus drill, key focus challenege 1\n  - week 2: key focus drill 2, physical sub-focus drill, key focus challenege 2\n\n**drill recommendation guidlines**\nWhen offering customized practice drills get drills by querying the Drills node, aligning recommendations to the user’s weaknesses.\n\n**challenge recommendation guidlines**\nWhen offering customized practice challenges get challenges by querying the Drills node, aligning recommendations to the user’s weaknesses.\n\n**storing the practice plan**\n- After creating the practice plan call the generate plan http request tool (this will save the plkan for future refernece)\n- In the http request you will need to pass the athleteprofileId along with all the ID's of the drills and challenges\n\n---\n\n**What You Will Receive:**\n\nYou will be provided with athlete data from PDI Assessments. Each assessment contains three sections:\n\n1. **Physical Ability**\n2. **Golf Ability**\n   - 3ft Putt (4 attempts)\n   - 10ft Putt (4 attempts)\n   - 30ft Putt (4 attempts)\n   - 3yd Chip (4 attempts)\n   - 10yd Chip (4 attempts)\n   - 20yd Chip (4 attempts)\n   - Driver (6 attempts)\n   - Six Iron Ball Flight Control (9 attempts, with 4 sub-metrics per shot: curve, carry, height, distance)\n3. **Mental Ability**\n\n---"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        2880,
        980
      ],
      "id": "47c0e6e0-04ee-49b7-9b34-bbc6409488e0",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ce1be9a0-3a2b-4b21-a988-52028cb62a70",
              "name": "output",
              "value": "",
              "type": "string"
            },
            {
              "id": "e97c3a54-d570-4467-91f7-2be8fa3b74b2",
              "name": "output",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3300,
        980
      ],
      "id": "4e1e6aab-3902-4944-994b-a93bbd5cf4fa",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={\n  \"output\": \"{{ $json.output }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        3580,
        980
      ],
      "id": "39c1a122-2669-4d7c-9c70-6201c5c3eefb",
      "name": "Respond to Webhook2"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "aa8d6fce-7047-451a-8bdc-6a96ce791afd",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1920,
        980
      ],
      "id": "c0b4c72f-9803-4181-8a99-d3ce0ee4f9e6",
      "name": "Webhook",
      "webhookId": "aa8d6fce-7047-451a-8bdc-6a96ce791afd"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use to get a list of challenges to recommend to the athlete",
        "operation": "executeQuery",
        "query": "SELECT cd.id, cd.section, cd.groupName, cd.level, cd.rules, cd.goal, cd.setup, cd.drillName\nFROM challengedrill cd\nLEFT JOIN assignment a \n    ON cd.id = a.challengeDrillId \n    AND a.athleteProfileId = {{ $('Webhook').item.json.body.attributes.athleteProfileId }}\nWHERE a.challengeDrillId IS NULL\n  AND cd.section NOT IN (\n      'Stress Management', \n      'Target Focus', \n      'Identity/Mindset', \n      'Goal Setting', \n      'Emotional Control', \n      'Self Awareness'\n  )\nAND cd.type != 0;"
      },
      "type": "n8n-nodes-base.microsoftSqlTool",
      "typeVersion": 1.1,
      "position": [
        3120,
        1260
      ],
      "id": "901bc787-c355-42b8-b35a-bcc0891e0c75",
      "name": "Challenges",
      "credentials": {
        "microsoftSql": {
          "id": "QWx5JdDwbJpAMzMS",
          "name": "Microsoft SQL account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use to get a list of drills to recommend to the athlete",
        "operation": "executeQuery",
        "query": "SELECT cd.id, cd.section, cd.groupName, cd.level, cd.rules, cd.goal, cd.setup, cd.drillName\nFROM challengedrill cd\nWHERE cd.drillName NOT IN (\n    SELECT cd2.drillName\n    FROM challengedrill cd2\n    INNER JOIN assignment a ON cd2.id = a.challengeDrillId\n    WHERE a.athleteProfileId = {{ $('Webhook').item.json.body.attributes.athleteProfileId }}\n)\nAND cd.section NOT IN (\n    'Stress Management', \n    'Target Focus', \n    'Identity/Mindset', \n    'Goal Setting', \n    'Emotional Control', \n    'Self Awareness'\n)\nAND cd.type = 0;\n"
      },
      "type": "n8n-nodes-base.microsoftSqlTool",
      "typeVersion": 1.1,
      "position": [
        3260,
        1260
      ],
      "id": "9a6a6004-5e7d-4a17-9534-b0b7e7e57e2f",
      "name": "Drills",
      "credentials": {
        "microsoftSql": {
          "id": "QWx5JdDwbJpAMzMS",
          "name": "Microsoft SQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT TOP 1 *\nFROM (\n    SELECT \n        [createdAt],\n        [modifiedAt],\n        [PdiWithScoringAvg],\n        [Putt3ft],\n        [Putt10ft],\n        [Putt30ft],\n        [Chip3yd],\n        [Chip10yd],\n        [Chip20yd],\n        [Driver],\n        [SixIronBFC],\n        [BroadJump],\n        [ASLRLeft],\n        [ASLRRight],\n        [DeepSquat],\n        [SupineBridgeLeft],\n        [SupineBridgeRight],\n        [ScoringAverage],\n        'assessmentSummary' AS source\n    FROM assessmentSummary\n    WHERE athleteProfileId = {{ $json.body.attributes.athleteProfileId }}\n\n    UNION ALL\n\n    SELECT \n        [createdAt],\n        [modifiedAt],\n        [PdiWithScoringAvg],\n        [Putt3ft],\n        [Putt10ft],\n        [Putt30ft],\n        [Chip3yd],\n        [Chip10yd],\n        [Chip20yd],\n        [Driver],\n        [SixIronBFC],\n        [BroadJump],\n        [ASLRLeft],\n        [ASLRRight],\n        [DeepSquat],\n        [SupineBridgeLeft],\n        [SupineBridgeRight],\n        [ScoringAverage],\n        'assessmentSummarySelf' AS source\n    FROM assessmentSummarySelf\n    WHERE athleteProfileId = {{ $json.body.attributes.athleteProfileId }}\n) AS combined\nORDER BY createdAt DESC"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        2120,
        980
      ],
      "id": "152c5b35-b900-4a28-a335-35799627d13b",
      "name": "Microsoft SQL",
      "alwaysOutputData": true,
      "credentials": {
        "microsoftSql": {
          "id": "QWx5JdDwbJpAMzMS",
          "name": "Microsoft SQL account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "HTTP Request that will create a practice plan",
        "method": "POST",
        "url": "https://pdibackenddev.azurewebsites.net/api/challenge-drill//assign-practice-plan",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "athleteProfileId",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', ``, 'string') }}"
            },
            {
              "name": "keyFocusDrillOneId",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', ``, 'string') }}"
            },
            {
              "name": "keyFocusDrillTwoId",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Value', ``, 'string') }}"
            },
            {
              "name": "challengeOneId",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters3_Value', ``, 'string') }}"
            },
            {
              "name": "challengeTwoId",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters4_Value', ``, 'string') }}"
            },
            {
              "name": "golfSubFocusDrillId",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters5_Value', ``, 'string') }}"
            },
            {
              "name": "physicalDrillId",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters6_Value', ``, 'string') }}"
            },
            {
              "name": "UNIQUE_KEY",
              "value": "0B4887D3-211F-41D4-A7B4-9906AF0CABE4"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2980,
        1260
      ],
      "id": "8543e1d1-4b37-4e49-af5e-24916bf0688a",
      "name": "Generate Plan"
    }
  ],
  "connections": {
    "Microsoft SQL2": {
      "main": [
        []
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Execute Workflow2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow2": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        []
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Athlete Details2": {
      "ai_tool": [
        []
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Microsoft SQL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Challenges": {
      "ai_tool": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Drills": {
      "ai_tool": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Plan": {
      "ai_tool": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "42402cad-33a6-4b83-bcf6-bf6c6d19819f",
  "triggerCount": 0,
  "tags": []
}