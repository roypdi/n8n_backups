{
  "createdAt": "2025-07-11T15:36:46.805Z",
  "updatedAt": "2025-07-25T20:14:03.000Z",
  "id": "YIAccubJA1g1Zgkt",
  "name": "Levi Test Flow",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=Athlete's Question: \n{{ $('Webhook').item.json.body.attributes.message }}\n\n---\n\n**Assessment:**\n{{ JSON.stringify($json.assessment.json) }}\n\n**Overall Average Scores:**\n{{ JSON.stringify($json.averageScores) }}\n\n---\nPlease analyze the data above. Then:\n-Please decipher whether the user is asking for a drill recommendation for today or for analysis on their assessment. If you can not figure out which the user is asking about please clarify and ask.\n\n_____________________\nDrill Assignment\n  -If a user asks for drills by saing some questions like: \"What should I work on?\", \"What drills should I do?\", \"How can I improve my game?\" then an analysis of their assessment is not needed. Begin by asking the following two things:\n  \"How much time do you have to train today?\"\n  \"Are you at home, at the range, or on the course right now?\"\n  \n  After receiving their response, use:\n  \n  Their assessment for their current weaknesses\n  \n  Use the microsoft sql drills node for a list of all possible drills\n  \n  Recommend the most relevant drills based on their lowest-performing areas from the assessment.\n  \n  Ensure recommendations match the user’s available time and location.\n  \n  - Recommend one drill and it should be the most relevant. \n  - Explain why it is being recommended (link it to a weak skill area, available time, and location). \n  - When returning a drill recommendation return an html button that says \"Accept\" with a class name of \"drill-recommendation\" and set the id to the drills id. Example: <button class='drill-recommendation' id='107'>Accept</button>\n  - The drillId will be equal to the \"id\" field for that specific drill from microsoft sql drills node\n  - Ask if they would like to accept this drill or if they would like another recommendation\n\nYou should say something like \"<p>Click to accept this drill or would you prefer a different drill?</p\n <button class='drill-recommendation' id='107'>Accept</button>\n\"\n\n----------------------------------\nRESPONSE FORMATTING:\n\nPlease send all responses in HTML format.\n\nHere are the guidelines for sending HTML elements:\n\nThe entire response should be encapsulated in a div with the class \"response\".\n\nAny sub elements within the response whould be grouped in a div with the class \"group\".\n\nAll headers should use h2 elements with class \"header\"\n\nAll Subheaders should use h4 elements with class \"subheader\"\n\nWhen trying to emphasize words or treat them as bold DO NOT use \"**\". Instead you should use <b> </b> elements...\n\nMake sure responses do not include \"\n html\" or anything similar. Strictly send HTML.\n\n\nExample:\n\n\"Hi! I'm Petey. Let's get started!\" -> \n\n\"<div class=\"response\">\n  <div class=\"group\">\n  <p><b>Hi!</b></p>\n  <p>I'm Petey. Let's get started! </p>\n  </div>\"\n</div>\n\n----------------------------------",
        "options": {
          "systemMessage": "=You are Coach Petey PDI, a seasoned and encouraging AI golf coach for PDI. PDI is a golf training and improvement tool designed to help athletes assess and improve their Physical, Golf, and Mental abilities through structured assessments and targeted drills. Users take comprehensive assessments and receive scores across various skill domains. Based on these scores, you provide insights, analysis, and personalized drill recommendations to guide their improvement.\n\n**Brief Details About PDI**\n- PDI = Player Development Index\n- Quantifying Golf Improvement, Beyond Scoring Average\n- Introducing the revolutionary new tool to discover and track the key factors that contribute to long term success\n- PDI provides lead factor data that is critical in understanding what to work on in training.\n- With PDI an athlete will accelerate their development and improvement.\n- PDI provides a roadmap on where to focus energy, time, and resources in training and coaching.\n- PDI uncovers the mystery of why an athlete may not be achieving their potential which is invaluable to college coaches in the recruiting process.\n- PDI closes the gap between perceived proficiency or handicap and the reality of skill and ability at any given moment.\n- PDI provides feedback to golf coaches on how effective the training program really is.\n\n**PDI Assessment Details**\n1. **Physical Ability**\n  - Broad Jump (total inches)\n  - Active Straight Leg Raise Left (scale of 0-3)\n  - Active Straight Leg Raise Right (scale of 0-3)\n  - Deep Squat (scale of 0-3)\n  - Supine Bridge Left (total seconds)\n  - Supine Bridge Right (total seconds)\n2. **Golf Ability**\n   - 3ft Putt (4 attempts)\n   - 10ft Putt (4 attempts)\n   - 30ft Putt (4 attempts)\n   - 3yd Chip (4 attempts)\n   - 10yd Chip (4 attempts)\n   - 20yd Chip (4 attempts)\n   - Driver (6 attempts)\n   - Six Iron Ball Flight Control (9 attempts, with 4 sub-metrics per shot: curve, carry, height, distance)\n3. **Mental Ability**\n\n\n**Rules and Responsibilities:**\n\n------------\nBased on the sessionId and simple memory node if it is the users \n------------\n\n1.) New Users / No Assessment Data\n  -If the user has not completed an assessment, do not provide analysis, insights, or drill recommendations.\n  -Instead, respond with a clear explanation that an initial assessment is required before personalized feedback can be given.\n  -You may answer general questions about PDI (e.g., how it works, what to expect, how scoring is calculated).\n  -Ask the user to complete their assessment to unlock personalized coaching features.\n\n2.)Assessment-Based Analysis\n  - If the user has completed an assessment and requests insight or analysis on specific sections (e.g., \"How is my putting?\" or \"Can you break down my physical performance?\"):\n\nUse the provided data:\n\n{{ JSON.stringify($json.assessment) }}: User's full assessment data\n\n{{ JSON.stringify($json.averageScores) }}: User's average scores over time\n\n  - Compare the user’s results to their own historical data and averages.\n  \n  - Highlight strengths and areas for improvement, and explain what each section measures.\n  \n  - Review how they performed in the assessment.\n  - Compare it to their all-time average.\n  - Highlight:\n    - Key improvements or declines\n    - Areas of strength\n    - Areas that need more work\n  - Be sure to focus on the golf and physical scores\n  - Be clear, friendly, encouraging, and concise.\n- After providing insight into the assessment ask the athlete if they would like a drill to help improve, if they say yes give them a drill that focuses on their weakest area\n\n3.) Drill Recommendations\n\nIf a user asks questions like:\n\n\"What should I work on?\"\n\n\"What drills should I do?\"\n\n\"How can I improve my game?\"\n\nBegin by asking the following two things:\n\"How much time do you have to train today?\"\n\"Are you at home, at the range, or on the course right now?\"\n\nAfter receiving their response, use:\n\n{{ JSON.stringify($json.assessment) }} for their current needs\n\nUse the microsoft sql drills node for a list of all possible drills\n\nRecommend the most relevant drills based on their lowest-performing areas from the assessment.\n\nEnsure recommendations match the user’s available time and location.\n\nAssign one drill and it should be the most relevant. Explain why it is being recommended (link it to a weak skill area, available time, and location). Ask if they would like this drill. If not ask whether they want a drill in the same section or if they would like to focus on another area.\n\nMake sure to always use the correct id for each drill. Each drill has a unique ID in the field called \"id\". If using the drills id for any reason use the value from that specific drill's \"id\" field.\n\nOnce you give a drill if the user responds with \"Accept\" then use the Assign Drill tool to assign that drill to the user. **Only ever assign a drill if the user is specifically accepting the drill**.\n\nWhen responding to \"Accept\" tell the athlete they have been assigned the drill and to click the \"Start Drill\" button. The start drill button should be formatted like: <button class='drill-navigation' data-drillId='123' data-assignmentId='321'>Accept</button>\n\nThe assignmenmtId is returned from the Assign Drill tool\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1520,
        -120
      ],
      "id": "1653714b-cdcd-4b6c-ad15-93a6b6212b55",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1812719b-d5cb-4269-809b-69bea648a8f1",
              "name": "output",
              "value": "={{ $('AI Agent').item.json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2240,
        -140
      ],
      "id": "222a1748-be57-47de-ab27-7fff810669de",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1580,
        440
      ],
      "id": "5a874f53-3e31-41f9-a5a2-deb8155ac10d",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "I8AkDrdcTfhJdWQC",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Returns list of drills.",
        "operation": "executeQuery",
        "query": "\nSELECT cd.id, cd.section, cd.groupName, cd.level, cd.rules, cd.goal, cd.setup, cd.drillName, cd.type\nFROM challengedrill cd\nLEFT JOIN assignment a \n    ON cd.id = a.challengeDrillId \n    AND a.athleteProfileId = {{ $('Webhook').item.json.body.attributes.athleteProfileId }}\nWHERE a.challengeDrillId IS NULL\n  AND cd.section NOT IN (\n      'Stress Management', \n      'Target Focus', \n      'Identity/Mindset', \n      'Goal Setting', \n      'Emotional Control', \n      'Self Awareness'\n  );\n"
      },
      "type": "n8n-nodes-base.microsoftSqlTool",
      "typeVersion": 1.1,
      "position": [
        2020,
        260
      ],
      "id": "d68f1d05-36a1-429a-ad94-7f8e494aa444",
      "name": "Microsoft SQL Drills",
      "credentials": {
        "microsoftSql": {
          "id": "QWx5JdDwbJpAMzMS",
          "name": "Microsoft SQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n      [FirstName]\n      ,[LastName]\n\n      ,[Active]\n\n      ,[Gender]\n\n      ,[DateOfBirth]\n      ,[PersonalBio]\n      ,[FamilyProfile]\n      ,[HomeCity]\n      ,[HomeState]\n\n      ,[Height]\n      ,[Weight]\n      ,[ClubHeadSpeed]\n      ,[CarryDistance]\n      ,[FirstTournamentYear]\n      ,[SATScore]\n      ,[ACTScore]\n      ,[PSATScore]\n      ,[MembershipTier]\n      ,[MembershipExpires]\n      ,[UsedTrialUpgrade]\n      ,[IsRegistered]\n      ,[CurrentSchoolPhone]\n      ,[AcceptanceSchoolName]\n      ,[RankAGAUpdated]\n      ,[RankJGSNational]\n      ,[RankJGSState]\n      ,[RankJGSClass]\n      ,[RankJGSUpdated]\n      ,[Goals]\n      ,[CoolFacts]\n      ,[HomeAddress]\n      ,[HomeZip]\n      ,[HomePhone]\n      ,[MobilePhone]\n      ,[PublicEmail]\n\n      ,[Twitter]\n      ,[Instagram]\n      ,[GuidanceCounselor]\n      ,[GuidanceCounselorEmail]\n      ,[GuidanceCounselorPhone]\n      ,[Country]\n      ,[IsRanked]\n      ,[ContactAddress]\n      ,[ContactCity]\n      ,[ContactState]\n      ,[ContactZip]\n      ,[Middlename]\n      ,[HasSeenTournamentGuidelines]\n      ,[Slug]\n      ,[RankWAGRNational]\n      ,[RankWAGRState]\n      ,[RankWAGRClass]\n      ,[RankWAGRUpdated]\n      ,[Facebook]\n      ,[ParentsSchool]\n      ,[IsAppNotification]\n      ,[IsEmailNotification]\n      ,[ProfileStatus]\n      ,[VolunteerExperience]\n      ,[ADNCustomerProfileID]\n      ,[IsAutoRenew]\n      ,[PaymentPlan]\n      ,[LastRenewDate]\n      ,[PaymentAmount]\n      ,[SubscriptionDate]\n      ,[LongExpiryEmailSent]\n      ,[ShortExpiryEmailSent]\n      ,[LongAutoRenewEmailSent]\n      ,[ShortAutoRenewEmailSent]\n      ,[DiscountCodeApplied]\n      ,[IsFirstTimeLoggedInAfterMembershipExpired]\n      ,[LockedForResults]\n      ,[AcademicHonors]\n      ,[NewTournamentsAdded]\n      ,[SysStartTime]\n      ,[SysEndTime]\n      ,[IsContacted]\n      ,[TournamentScoringAverageLastYear]\n      ,[SnapChat]\n      ,[NCAAClearingHouse]\n      ,[NeedsWelcomeEmail]\n      ,[AthleteSourceId]\n      ,[HideFromSearchResults]\n      ,[HubCupStandingRank]\n      ,[HubCupStandingElibleTournamentCount]\n      ,[HubCupStandingScoringAverage]\n      ,[HubCupStandingRankLastUpdateDate]\n      ,[AthleteSuccesStoryFeedback]\n      ,[IsSuccessStoryApproved]\n      ,[AcceptanceSchoolId]\n      ,[AthletePlayerDevelopmentLevelID]\n      ,[IsPushNotification]\n      ,[IsWeeklyUpdateAdded]\n      ,[HwDidYouHearAboutUs]\n      ,[AthleteDominantHand]\n      ,[Priorities]\n      ,[userId]\n      ,[GolferType]\n      ,[HubAthleteProfileId]\n      ,[College]\n      ,[SelfAssessmentAllowance]\n ,[PdiDate]\n      ,[PdiWithScoringAvg]\n      ,[PdiWithoutScoringAvg]\n      ,[Putt3ft]\n      ,[Putt10ft]\n      ,[Putt30ft]\n      ,[Chip3yd]\n      ,[Chip10yd]\n      ,[Chip20yd]\n      ,[Driver]\n      ,[SixIronBFC]\n      ,[SupineBridge]\n      ,[BroadJump]\n      ,[ASLRLeft]\n      ,[ASLRRight]\n      ,[DeepSquat]\n      ,[ScoringAverage]\n      ,[SupineBridgeLeft]\n      ,[SupineBridgeRight]\n      ,[GolfPerformance]\n      ,[GolfProficiency]\n      ,[PhysicalProficiency]\n  FROM [dbo].[AthleteProfile]\n    INNER JOIN [dbo].[AssessmentSummary] ON [dbo].[AthleteProfile].[id] = [dbo].[AssessmentSummary].[athleteProfileId]\nWHERE [dbo].[AthleteProfile].[id] = {{ $('Edit Fields1').item.json.ap_id }}"
      },
      "type": "n8n-nodes-base.microsoftSqlTool",
      "typeVersion": 1.1,
      "position": [
        1900,
        900
      ],
      "id": "26c4f8cd-6714-40da-b10e-c3efefe0438a",
      "name": "Microsoft SQL AP",
      "credentials": {
        "microsoftSql": {
          "id": "QWx5JdDwbJpAMzMS",
          "name": "Microsoft SQL account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6d982a37-5d6e-4635-8f53-3b8a1997ca17",
              "name": "ap_id",
              "value": "={{ $('Webhook').item.json.body.attributes.athleteProfileId }}",
              "type": "number"
            },
            {
              "id": "21f7860b-e755-4319-8085-9f7593e857fa",
              "name": "chatInput",
              "value": "={{ $('Webhook').item.json.body.attributes.message }}",
              "type": "string"
            },
            {
              "id": "55e638f6-98a9-4489-a3b4-469449f7b0e0",
              "name": "averageScores",
              "value": "={{ $json.averageScores }}",
              "type": "object"
            },
            {
              "id": "21680b6d-6790-4c1c-8f49-cc4a633f7962",
              "name": "assessment",
              "value": "={{ $('Code').item.json.assessment}}",
              "type": "object"
            },
            {
              "id": "79d3dcc5-40eb-407c-b2a0-a0d97ee341be",
              "name": "sessionId",
              "value": "2222456787654321",
              "type": "string"
            },
            {
              "id": "bb9c1f71-deac-417e-8fed-e83da1198a75",
              "name": "todaysDate",
              "value": "={{ $('Webhook').item.json.body.attributes.todaysDate }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1200,
        120
      ],
      "id": "edecb3ab-73c2-4761-ad5c-d4f52e49d4a7",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get subsection scores for each assessment the user has taken ordered from the most recent to the least recent.",
        "operation": "executeQuery",
        "query": "SELECT *\nFROM [dbo].[SubSectionScores]\nWHERE [dbo].[SubSectionScores].surveyResponseId IN (SELECT id FROM [dbo].[SurveyResponse] WHERE athleteProfileId = {{ $('Edit Fields1').item.json.ap_id }})\nORDER by id DESC\n"
      },
      "type": "n8n-nodes-base.microsoftSqlTool",
      "typeVersion": 1.1,
      "position": [
        2100,
        900
      ],
      "id": "cd4c7bfa-7528-4398-8e74-265e5e8d23ac",
      "name": "Microsoft SQL Scores",
      "credentials": {
        "microsoftSql": {
          "id": "QWx5JdDwbJpAMzMS",
          "name": "Microsoft SQL account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "dde642e2-cf6a-4935-9711-2fc921b44f06",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -540,
        120
      ],
      "id": "680ede81-1548-470e-85cd-959951da46ac",
      "name": "Webhook",
      "webhookId": "dde642e2-cf6a-4935-9711-2fc921b44f06"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"output\": {{ JSON.stringify($json.output) }}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        2500,
        -140
      ],
      "id": "92e3f94c-dd0e-4d97-b6a2-e180852740d0",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Returns athlete's name.",
        "operation": "executeQuery",
        "query": "SELECT\n      [FirstName]\n      ,[LastName]\n      ,[Gender]\n      ,[DateOfBirth]\n      ,[Height]\n      ,[Weight]\n      ,[userId]\n      ,[GolferType]\n      ,[College]\n  FROM [dbo].[AthleteProfile]\nWHERE [dbo].[AthleteProfile].[id] = {{ $('Edit Fields1').item.json.ap_id }}"
      },
      "type": "n8n-nodes-base.microsoftSqlTool",
      "typeVersion": 1.1,
      "position": [
        2180,
        260
      ],
      "id": "4d68435a-e593-4a2a-acac-9a8c4cc04e04",
      "name": "Athlete Details",
      "credentials": {
        "microsoftSql": {
          "id": "QWx5JdDwbJpAMzMS",
          "name": "Microsoft SQL account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Returns a list of all coach guided assessments taken by the user ordered from most recent to least recent.",
        "operation": "executeQuery",
        "query": "select top 1 [createdAt],\n  [modifiedAt],\n  [PdiWithScoringAvg],\n  [Putt3ft],\n  [Putt10ft],\n  [Putt30ft],\n  [Chip3yd],\n  [Chip10yd],\n  [Chip20yd],\n  [Driver],\n  [SixIronBFC],\n  [BroadJump],\n  [ASLRLeft],\n  [ASLRRight],\n  [DeepSquat],\n  [SupineBridgeLeft],\n  [SupineBridgeRight],\n  [ScoringAverage]\nfrom assessmentSummary\nwhere athleteprofileId =  {{ $('Edit Fields1').item.json.ap_id }}\nORDER by id desc"
      },
      "type": "n8n-nodes-base.microsoftSqlTool",
      "typeVersion": 1.1,
      "position": [
        1900,
        1180
      ],
      "id": "f9fcf6aa-f1fd-4560-8004-f51a3df61b8f",
      "name": "Recent Assessment",
      "credentials": {
        "microsoftSql": {
          "id": "QWx5JdDwbJpAMzMS",
          "name": "Microsoft SQL account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "description": "Call this tool to get a JSON object containing the athletes average scores for the last three assessments and the athletes overall average scores.\n\n**Explanation of JSON fields**\naverageScores - score averages for all the athlete's assessments\naverageOfLastThree - the average scores of the last three assessments",
        "workflowId": {
          "__rl": true,
          "value": "wtIRa9GuyX1CFh4k",
          "mode": "list",
          "cachedResultName": "AssessmentData"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "apId": "1210"
          },
          "matchingColumns": [
            "apId"
          ],
          "schema": [
            {
              "id": "apId",
              "displayName": "apId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2100,
        1180
      ],
      "id": "e11ac524-f4b7-4735-8be9-322d6c11fdd8",
      "name": "Assessment Averages",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT TOP 1 *\nFROM (\n    SELECT \n        [createdAt],\n        [modifiedAt],\n        [PdiWithScoringAvg],\n        [Putt3ft],\n        [Putt10ft],\n        [Putt30ft],\n        [Chip3yd],\n        [Chip10yd],\n        [Chip20yd],\n        [Driver],\n        [SixIronBFC],\n        [BroadJump],\n        [ASLRLeft],\n        [ASLRRight],\n        [DeepSquat],\n        [SupineBridgeLeft],\n        [SupineBridgeRight],\n        [ScoringAverage],\n        'assessmentSummary' AS source\n    FROM assessmentSummary\n    WHERE athleteProfileId = {{ $json.body.attributes.athleteProfileId }}\n\n    UNION ALL\n\n    SELECT \n        [createdAt],\n        [modifiedAt],\n        [PdiWithScoringAvg],\n        [Putt3ft],\n        [Putt10ft],\n        [Putt30ft],\n        [Chip3yd],\n        [Chip10yd],\n        [Chip20yd],\n        [Driver],\n        [SixIronBFC],\n        [BroadJump],\n        [ASLRLeft],\n        [ASLRRight],\n        [DeepSquat],\n        [SupineBridgeLeft],\n        [SupineBridgeRight],\n        [ScoringAverage],\n        'assessmentSummarySelf' AS source\n    FROM assessmentSummarySelf\n    WHERE athleteProfileId = {{ $json.body.attributes.athleteProfileId }}\n) AS combined\nORDER BY createdAt DESC"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        140,
        300
      ],
      "id": "35bf6b38-4bd8-4df2-89c4-019a9b62bddc",
      "name": "Microsoft SQL",
      "alwaysOutputData": true,
      "credentials": {
        "microsoftSql": {
          "id": "QWx5JdDwbJpAMzMS",
          "name": "Microsoft SQL account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "wtIRa9GuyX1CFh4k",
          "mode": "list",
          "cachedResultName": "AssessmentData"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "apId": "={{JSON.stringify($('Webhook').item.json.body.attributes.athleteProfileId)}}"
          },
          "matchingColumns": [
            "apId"
          ],
          "schema": [
            {
              "id": "apId",
              "displayName": "apId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        960,
        120
      ],
      "id": "0a11b9d4-8f8c-4195-8c13-92c5c7f35af3",
      "name": "Execute Workflow",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "return  {assessment: $input.first()};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        740,
        120
      ],
      "id": "cb0d74f1-ba85-432c-ae5f-a1a23979847d",
      "name": "Code"
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "chatmemory",
          "mode": "list",
          "cachedResultName": "chatmemory"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        1460,
        780
      ],
      "id": "a30d5f8a-0091-4154-a2f1-df1ff9b4d7be",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "Bd0BoZscH4xahUhT",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "=input:  {{ $('Webhook').item.json.body.attributes.message }}\noutput: {{ $('AI Agent').item.json.output }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "athleteprofileId",
                "value": "={{ $('Webhook').item.json.body.attributes.athleteProfileId }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        1600,
        1220
      ],
      "id": "49d23d94-e184-47fa-8814-884dc8e45cf9",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "options": {
          "dimensions": 512
        }
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        1420,
        1260
      ],
      "id": "c76d9194-b44c-4ea8-adad-1e9efed1e64d",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "I8AkDrdcTfhJdWQC",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1660,
        200
      ],
      "id": "2961c401-a674-49d0-b070-85e14f2071a3",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "Use this tool to recall relevant information from previous chats with the user. It helps when continuity or past discussions are important. Provide a question or topic to search for related chat history.",
        "pineconeIndex": {
          "__rl": true,
          "value": "chatmemory",
          "mode": "list",
          "cachedResultName": "chatmemory"
        },
        "topK": 10,
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "athleteprofileId",
                "value": "={{ $('Webhook').item.json.body.attributes.athleteProfileId }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        1160,
        800
      ],
      "id": "edeaf124-f8e2-437f-ad6a-8c99776b9f6d",
      "name": "Pinecone Vector Store1",
      "credentials": {
        "pineconeApi": {
          "id": "Bd0BoZscH4xahUhT",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "expression",
        "numberOutputs": 2,
        "output": "={{$json.body.attributes.assessmentId === null}}"
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -340,
        120
      ],
      "id": "34fb83b2-3ba2-4f30-87fd-556b61a40bf9",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select top 1 [createdAt],\n  [modifiedAt],\n  [PdiWithScoringAvg],\n  [Putt3ft],\n  [Putt10ft],\n  [Putt30ft],\n  [Chip3yd],\n  [Chip10yd],\n  [Chip20yd],\n  [Driver],\n  [SixIronBFC],\n  [BroadJump],\n  [ASLRLeft],\n  [ASLRRight],\n  [DeepSquat],\n  [SupineBridgeLeft],\n  [SupineBridgeRight],\n  [ScoringAverage]\nfrom assessmentSummary\nwhere athleteprofileId =  {{ $json.body.attributes.athleteProfileId }} and id = {{ $json.body.attributes.assessmentId }}\nORDER by id desc"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        200,
        -120
      ],
      "id": "9c4684bb-2095-4291-8ccf-510382c239c7",
      "name": "Microsoft SQL1",
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "microsoftSql": {
          "id": "QWx5JdDwbJpAMzMS",
          "name": "Microsoft SQL account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "HTTP Request that will assign an athlete a drill. Set the drillId parameter equal to the id of the drill you are assigning.",
        "method": "POST",
        "url": "https://pdibackenddev.azurewebsites.net/api/challenge-drill/assign-drill",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "athleteProfileId",
              "value": "={{ $('Webhook').item.json.body.attributes.athleteProfileId }}"
            },
            {
              "name": "UNIQUE_KEY",
              "value": "0B4887D3-211F-41D4-A7B4-9906AF0CABE4"
            },
            {
              "name": "drillId",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Value', `This should be the ID of the drill the user chose to accept.`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1860,
        260
      ],
      "id": "1825bcc3-996d-48a3-9e56-a0ed722770b2",
      "name": "Assign Drill"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "1ee707c9-2853-47c7-9dbc-e77edb211e35"
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -120,
        20
      ],
      "id": "0b86d512-f13b-4c22-ae3a-a86ccaf3879a",
      "name": "Switch1"
    }
  ],
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL Drills": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL AP": {
      "ai_tool": [
        []
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL Scores": {
      "ai_tool": [
        []
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Athlete Details": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Recent Assessment": {
      "ai_tool": [
        []
      ]
    },
    "Assessment Averages": {
      "ai_tool": [
        []
      ]
    },
    "Microsoft SQL": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "main": [
        []
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          },
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store1": {
      "ai_tool": [
        []
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Microsoft SQL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Assign Drill": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Microsoft SQL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "64b66014-3f7a-4a14-85d6-95bb06273597",
  "triggerCount": 1,
  "tags": [
    {
      "createdAt": "2025-07-11T13:17:34.969Z",
      "updatedAt": "2025-07-11T13:17:34.969Z",
      "id": "XEjN7fWhDMHdaXaT",
      "name": "Golf Coach"
    }
  ]
}